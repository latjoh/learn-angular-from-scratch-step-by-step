{"ast":null,"code":"import { LoopBackConfig } from '../../lb.config';\nimport * as i0 from \"@angular/core\";\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@johncasarrubias>\r\n* @module LoggerService\r\n* @license MIT\r\n* @description\r\n* Console Log wrapper that can be disabled in production mode\r\n**/\nvar LoggerService = /** @class */function () {\n  function LoggerService() {}\n  LoggerService.prototype.log = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (LoopBackConfig.debuggable()) console.log.apply(console, args);\n  };\n  LoggerService.prototype.info = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (LoopBackConfig.debuggable()) console.info.apply(console, args);\n  };\n  LoggerService.prototype.error = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (LoopBackConfig.debuggable()) console.error.apply(console, args);\n  };\n  LoggerService.prototype.count = function (arg) {\n    if (LoopBackConfig.debuggable()) console.count(arg);\n  };\n  LoggerService.prototype.group = function (arg) {\n    if (LoopBackConfig.debuggable()) console.count(arg);\n  };\n  LoggerService.prototype.groupEnd = function () {\n    if (LoopBackConfig.debuggable()) console.groupEnd();\n  };\n  LoggerService.prototype.profile = function (arg) {\n    if (LoopBackConfig.debuggable()) console.count(arg);\n  };\n  LoggerService.prototype.profileEnd = function () {\n    if (LoopBackConfig.debuggable()) console.profileEnd();\n  };\n  LoggerService.prototype.time = function (arg) {\n    if (LoopBackConfig.debuggable()) console.time(arg);\n  };\n  LoggerService.prototype.timeEnd = function (arg) {\n    if (LoopBackConfig.debuggable()) console.timeEnd(arg);\n  };\n  LoggerService.ɵfac = function LoggerService_Factory(t) {\n    return new (t || LoggerService)();\n  };\n  LoggerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoggerService,\n    factory: LoggerService.ɵfac\n  });\n  return LoggerService;\n}();\nexport { LoggerService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}