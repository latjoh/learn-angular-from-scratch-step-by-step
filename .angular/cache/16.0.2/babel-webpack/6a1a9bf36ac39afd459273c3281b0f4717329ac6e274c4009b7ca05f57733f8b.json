{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AnswersService } from '../services/answers.service';\nimport { MatDialog } from '@angular/material';\nimport { DeleteAnswerModalComponent } from './delete-answer/delete-answer-modal.component';\nimport { NewAnswerModalComponent } from './new-answer/new-answer-modal.component';\nimport { UpdateAnswerModalComponent } from './update-answer/update-answer-modal.component';\nvar QuestionAnswersComponent = /** @class */function () {\n  function QuestionAnswersComponent(answersService, route, dialog) {\n    this.answersService = answersService;\n    this.route = route;\n    this.dialog = dialog;\n  }\n  QuestionAnswersComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.route.data.subscribe(function (routeData) {\n      var data = routeData['data'];\n      if (data) {\n        _this.question = data.question;\n      }\n    });\n  };\n  QuestionAnswersComponent.prototype.openNewAnswerModal = function (questionId) {\n    var _this = this;\n    var dialogRef = this.dialog.open(NewAnswerModalComponent, {\n      data: {\n        questionId: questionId\n      }\n    });\n    dialogRef.afterClosed().subscribe(function (answer) {\n      if (answer) {\n        _this.addAnswerToList(answer);\n      }\n    });\n  };\n  QuestionAnswersComponent.prototype.openUpdateAnswerModal = function (answer) {\n    var dialogRef = this.dialog.open(UpdateAnswerModalComponent, {\n      data: {\n        answer: answer\n      }\n    });\n  };\n  QuestionAnswersComponent.prototype.delete = function (answerId) {\n    var _this = this;\n    var dialogRef = this.dialog.open(DeleteAnswerModalComponent, {\n      data: {\n        answerId: answerId\n      }\n    });\n    dialogRef.afterClosed().subscribe(function (confirm) {\n      if (confirm) {\n        var index = _this.question.answers.findIndex(function (answer) {\n          return answer.id === answerId;\n        });\n        _this.question.answers.splice(index, 1);\n      }\n    });\n  };\n  QuestionAnswersComponent.prototype.addPositiveVote = function (answer) {\n    answer.positiveVotes += 1;\n    this.answersService.updateAnswer(answer);\n  };\n  QuestionAnswersComponent.prototype.addNegativeVote = function (answer) {\n    answer.negativeVotes += 1;\n    this.answersService.updateAnswer(answer);\n  };\n  QuestionAnswersComponent.prototype.addAnswerToList = function (answer) {\n    this.question.answers.push(answer);\n  };\n  var _a;\n  QuestionAnswersComponent = __decorate([Component({\n    selector: 'answer',\n    styleUrls: ['./question-answers.scss'],\n    templateUrl: './question-answers.component.html'\n  }), __metadata(\"design:paramtypes\", [AnswersService, ActivatedRoute, typeof (_a = typeof MatDialog !== \"undefined\" && MatDialog) === \"function\" ? _a : Object])], QuestionAnswersComponent);\n  return QuestionAnswersComponent;\n}();\nexport { QuestionAnswersComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}