{"ast":null,"code":"var Question = /** @class */function () {\n  function Question(data) {\n    Object.assign(this, data);\n  }\n  /**\r\n   * The name of the model represented by this $resource,\r\n   * i.e. `Question`.\r\n   */\n  Question.getModelName = function () {\n    return \"Question\";\n  };\n  /**\r\n  * @method factory\r\n  * @author Jonathan Casarrubias\r\n  * @license MIT\r\n  * This method creates an instance of Question for dynamic purposes.\r\n  **/\n  Question.factory = function (data) {\n    return new Question(data);\n  };\n  /**\r\n  * @method getModelDefinition\r\n  * @author Julien Ledun\r\n  * @license MIT\r\n  * This method returns an object that represents some of the model\r\n  * definitions.\r\n  **/\n  Question.getModelDefinition = function () {\n    return {\n      name: 'Question',\n      plural: 'Questions',\n      path: 'Questions',\n      idName: 'id',\n      properties: {\n        \"categorySlug\": {\n          name: 'categorySlug',\n          type: 'string'\n        },\n        \"questionSlug\": {\n          name: 'questionSlug',\n          type: 'string'\n        },\n        \"question\": {\n          name: 'question',\n          type: 'string'\n        },\n        \"negativeVotes\": {\n          name: 'negativeVotes',\n          type: 'number',\n          default: 0\n        },\n        \"positiveVotes\": {\n          name: 'positiveVotes',\n          type: 'number',\n          default: 0\n        },\n        \"id\": {\n          name: 'id',\n          type: 'any'\n        }\n      },\n      relations: {\n        answers: {\n          name: 'answers',\n          type: 'Answer[]',\n          model: 'Answer',\n          relationType: 'hasMany',\n          keyFrom: 'id',\n          keyTo: 'questionId'\n        }\n      }\n    };\n  };\n  return Question;\n}();\nexport { Question };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}