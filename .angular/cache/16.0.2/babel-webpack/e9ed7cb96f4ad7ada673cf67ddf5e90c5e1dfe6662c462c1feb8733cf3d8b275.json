{"ast":null,"code":"/* tslint:disable */\n/**\r\n * @module Storage\r\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n * @license MIT\r\n * @description\r\n * The InternalStorage class is used for dependency injection swapping.\r\n * It will be provided using factory method from different sources.\r\n **/\nexport class BaseStorage {\n  /**\r\n   * @method get\r\n   * @param {string} key Storage key name\r\n   * @return {any}\r\n   * @description\r\n   * The getter will return any type of data persisted in storage.\r\n   **/\n  get(key) {}\n  /**\r\n   * @method set\r\n   * @param {string} key Storage key name\r\n   * @param {any} value Any value\r\n   * @return {void}\r\n   * @description\r\n   * The setter will return any type of data persisted in localStorage.\r\n   **/\n  set(key, value, expires) {}\n  /**\r\n   * @method remove\r\n   * @param {string} key Storage key name\r\n   * @return {void}\r\n   * @description\r\n   * This method will remove a localStorage item from the client.\r\n   **/\n  remove(key) {}\n}\n/**\r\n * @module InternalStorage\r\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n * @license MIT\r\n * @description\r\n * The InternalStorage class is used for dependency injection swapping.\r\n * It will be provided using factory method from different sources.\r\n * This is mainly required because Angular Universal integration.\r\n * It does inject a CookieStorage instead of LocalStorage.\r\n **/\nexport class InternalStorage extends BaseStorage {}\n/**\r\n * @module SDKStorage\r\n * @author Jonathan Casarrubias <t: johncasarrubias, gh: mean-expert-official>\r\n * @license MIT\r\n * @description\r\n * The SDKStorage class is used for dependency injection swapping.\r\n * It will be provided using factory method according the right environment.\r\n * This is created for public usage, to allow persisting custom data\r\n * Into the local storage API.\r\n **/\nexport class SDKStorage extends BaseStorage {}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}