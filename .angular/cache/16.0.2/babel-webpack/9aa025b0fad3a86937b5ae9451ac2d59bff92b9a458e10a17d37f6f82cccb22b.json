{"ast":null,"code":"import { Observable } from 'rxjs/Observable';\n//import { ErrorObservable } from 'rxjs/observable/ErrorObservable';\nimport 'rxjs/add/observable/throw';\nimport * as i0 from \"@angular/core\";\n/**\r\n * Default error handler\r\n */\nvar ErrorHandler = /** @class */function () {\n  function ErrorHandler() {}\n  // ErrorObservable when rxjs version < rc.5\n  // ErrorObservable<string> when rxjs version = rc.5\n  // I'm leaving any for now to avoid breaking apps using both versions\n  ErrorHandler.prototype.handleError = function (error) {\n    return Observable.throw(error.json().error || 'Server error');\n  };\n  ErrorHandler.ɵfac = function ErrorHandler_Factory(t) {\n    return new (t || ErrorHandler)();\n  };\n  ErrorHandler.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorHandler,\n    factory: ErrorHandler.ɵfac\n  });\n  return ErrorHandler;\n}();\nexport { ErrorHandler };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}