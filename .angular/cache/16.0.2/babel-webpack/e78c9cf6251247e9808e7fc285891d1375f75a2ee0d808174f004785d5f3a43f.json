{"ast":null,"code":"import _defineProperty from \"C:/Users/john.latulippe/lafs-web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AnswersService } from '../services/answers.service';\nimport { MatDialog } from '@angular/material';\nimport { DeleteAnswerModalComponent } from './delete-answer/delete-answer-modal.component';\nimport { NewAnswerModalComponent } from './new-answer/new-answer-modal.component';\nimport { UpdateAnswerModalComponent } from './update-answer/update-answer-modal.component';\nlet QuestionAnswersComponent = class QuestionAnswersComponent {\n  constructor(answersService, route, dialog) {\n    _defineProperty(this, \"answersService\", void 0);\n    _defineProperty(this, \"route\", void 0);\n    _defineProperty(this, \"dialog\", void 0);\n    _defineProperty(this, \"question\", void 0);\n    this.answersService = answersService;\n    this.route = route;\n    this.dialog = dialog;\n  }\n  ngOnInit() {\n    this.route.data.subscribe(routeData => {\n      let data = routeData['data'];\n      if (data) {\n        this.question = data.question;\n      }\n    });\n  }\n  openNewAnswerModal(questionId) {\n    let dialogRef = this.dialog.open(NewAnswerModalComponent, {\n      data: {\n        questionId: questionId\n      }\n    });\n    dialogRef.afterClosed().subscribe(answer => {\n      if (answer) {\n        this.addAnswerToList(answer);\n      }\n    });\n  }\n  openUpdateAnswerModal(answer) {\n    let dialogRef = this.dialog.open(UpdateAnswerModalComponent, {\n      data: {\n        answer: answer\n      }\n    });\n  }\n  delete(answerId) {\n    let dialogRef = this.dialog.open(DeleteAnswerModalComponent, {\n      data: {\n        answerId: answerId\n      }\n    });\n    dialogRef.afterClosed().subscribe(confirm => {\n      if (confirm) {\n        var index = this.question.answers.findIndex(answer => answer.id === answerId);\n        this.question.answers.splice(index, 1);\n      }\n    });\n  }\n  addPositiveVote(answer) {\n    answer.positiveVotes += 1;\n    this.answersService.updateAnswer(answer);\n  }\n  addNegativeVote(answer) {\n    answer.negativeVotes += 1;\n    this.answersService.updateAnswer(answer);\n  }\n  addAnswerToList(answer) {\n    this.question.answers.push(answer);\n  }\n};\nQuestionAnswersComponent = __decorate([Component({\n  selector: 'answer',\n  styleUrls: ['./question-answers.scss'],\n  templateUrl: './question-answers.component.html'\n}), __metadata(\"design:paramtypes\", [AnswersService, ActivatedRoute, typeof (_a = typeof MatDialog !== \"undefined\" && MatDialog) === \"function\" ? _a : Object])], QuestionAnswersComponent);\nexport { QuestionAnswersComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}