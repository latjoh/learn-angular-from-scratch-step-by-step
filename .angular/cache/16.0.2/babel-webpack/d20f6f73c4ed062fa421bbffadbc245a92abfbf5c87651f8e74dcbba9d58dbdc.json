{"ast":null,"code":"import _defineProperty from \"C:/Users/john.latulippe/lafs-web/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as i0 from \"@angular/core\";\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\r\n* @module StorageBrowser\r\n* @license MIT\r\n* @description\r\n* This module handle localStorage, it will be provided using DI Swapping according the\r\n* SDK Socket Driver Available currently supporting Angular 2 for web and NativeScript 2.\r\n**/\nexport let StorageBrowser = /*#__PURE__*/(() => {\n  class StorageBrowser {\n    /**\r\n     * @method get\r\n     * @param {string} key Storage key name\r\n     * @return {any}\r\n     * @description\r\n     * The getter will return any type of data persisted in localStorage.\r\n     **/\n    get(key) {\n      let data = localStorage.getItem(key);\n      return this.parse(data);\n    }\n    /**\r\n     * @method set\r\n     * @param {string} key Storage key name\r\n     * @param {any} value Any value\r\n     * @return {void}\r\n     * @description\r\n     * The setter will return any type of data persisted in localStorage.\r\n     **/\n    set(key, value, expires) {\n      localStorage.setItem(key, typeof value === 'object' ? JSON.stringify(value) : value);\n    }\n    /**\r\n     * @method remove\r\n     * @param {string} key Storage key name\r\n     * @return {void}\r\n     * @description\r\n     * This method will remove a localStorage item from the client.\r\n     **/\n    remove(key) {\n      if (localStorage[key]) {\n        localStorage.removeItem(key);\n      } else {\n        console.log('Trying to remove unexisting key: ', key);\n      }\n    }\n    /**\r\n     * @method parse\r\n     * @param {any} value Input data expected to be JSON\r\n     * @return {void}\r\n     * @description\r\n     * This method will parse the string as JSON if possible, otherwise will\r\n     * return the value itself.\r\n     **/\n    parse(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  }\n  _defineProperty(StorageBrowser, \"\\u0275fac\", function StorageBrowser_Factory(t) {\n    return new (t || StorageBrowser)();\n  });\n  _defineProperty(StorageBrowser, \"\\u0275prov\", /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageBrowser,\n    factory: StorageBrowser.ɵfac\n  }));\n  return StorageBrowser;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}