{"ast":null,"code":"import { AnswerApi, Answer } from '../../../sdk';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../sdk\";\nvar AnswersService = /** @class */function () {\n  function AnswersService(answerApi) {\n    this.answerApi = answerApi;\n  }\n  AnswersService.prototype.getAnswers = function (questionId) {\n    var query = {\n      questionId: questionId\n    };\n    return this.answerApi.find({\n      where: query\n    }).toPromise();\n  };\n  AnswersService.prototype.getAnswer = function (anserId) {\n    var query = {\n      id: anserId\n    };\n    return this.answerApi.find({\n      where: query\n    }).toPromise();\n  };\n  AnswersService.prototype.deleteAnswer = function (answerId) {\n    return this.answerApi.deleteById(answerId).toPromise();\n  };\n  AnswersService.prototype.updateAnswer = function (values) {\n    var data = new Answer();\n    data.answer = values.answer;\n    data.positiveVotes = values.positiveVotes;\n    data.negativeVotes = values.negativeVotes;\n    data.questionId = values.questionId;\n    return this.answerApi.updateAttributes(values.id, data).toPromise();\n  };\n  AnswersService.prototype.createAnswer = function (values) {\n    var data = new Answer();\n    data.answer = values.answer;\n    data.questionId = values.questionId;\n    return this.answerApi.create(data).toPromise();\n  };\n  AnswersService.prototype.countAnswers = function (questionId) {\n    var query = {\n      questionId: questionId\n    };\n    return this.answerApi.count({\n      where: query\n    }).toPromise();\n  };\n  AnswersService.ɵfac = function AnswersService_Factory(t) {\n    return new (t || AnswersService)(i0.ɵɵinject(i1.AnswerApi));\n  };\n  AnswersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnswersService,\n    factory: AnswersService.ɵfac\n  });\n  return AnswersService;\n}();\nexport { AnswersService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}