{"ast":null,"code":"import { URLSearchParams } from '@angular/http';\nimport * as i0 from \"@angular/core\";\n/**\r\n* @author Jonathan Casarrubias <twitter:@johncasarrubias> <github:@mean-expert-official>\r\n* @module JSONSearchParams\r\n* @license MIT\r\n* @description\r\n* JSON Parser and Wrapper for the Angular2 URLSearchParams\r\n* This module correctly encodes a json object into a query string and then creates\r\n* an instance of the URLSearchParams component for later use in HTTP Calls\r\n**/\nvar JSONSearchParams = /** @class */function () {\n  function JSONSearchParams() {}\n  JSONSearchParams.prototype.setJSON = function (obj) {\n    this._usp = new URLSearchParams(this._JSON2URL(obj, false));\n  };\n  JSONSearchParams.prototype.getURLSearchParams = function () {\n    return this._usp;\n  };\n  JSONSearchParams.prototype._JSON2URL = function (obj, parent) {\n    var parts = [];\n    for (var key in obj) parts.push(this._parseParam(key, obj[key], parent));\n    return parts.join('&');\n  };\n  JSONSearchParams.prototype._parseParam = function (key, value, parent) {\n    var processedKey = parent ? parent + '[' + key + ']' : key;\n    if (value && (typeof value === 'object' || Array.isArray(value))) {\n      return this._JSON2URL(value, processedKey);\n    }\n    return processedKey + '=' + value;\n  };\n  JSONSearchParams.ɵfac = function JSONSearchParams_Factory(t) {\n    return new (t || JSONSearchParams)();\n  };\n  JSONSearchParams.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JSONSearchParams,\n    factory: JSONSearchParams.ɵfac\n  });\n  return JSONSearchParams;\n}();\nexport { JSONSearchParams };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}